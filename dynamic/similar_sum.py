# 66008294
"""
    Перед запуском перебора вариантов делаем проверку на кратность суммы
    всех элементов последовательности двум. Если сумма не кратна, значит
    данную последовательность невозможно разделить на две равные половины.
    Далее перебираем и суммируем элементы последовательности пока сумма
    одной половины не будет равна половине суммы всей последовательности,
    либо пока перебор не дойдет до конца установив отсутсвие двух равных
    половин.


    -- ВРЕМЕННАЯ СЛОЖНОСТЬ --
    В худшем случае переберем N элементов N раз - О(N*N)

    -- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
    Работаем только с исходной последовательностью - затраты по памяти О(N)

"""

def func(a, n):
    summ = sum(a)
    if summ % 2:
        return False

    a.sort(reverse=True)
    bound = summ//2

    for i in range(n):
        summ = a[i]
        for j in range(i+1, n):
            s = summ + a[j]
            if s == bound:
                return True
            elif s < bound:
                summ += a[j]

    return False


if __name__ == '__main__':

    n = int(input())
    a = list(map(int, input().split()))
    print(func(a, n))
